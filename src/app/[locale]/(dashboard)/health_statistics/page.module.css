/* page.module.css */

/* --- General Page Container --- */
.pageContainer {
    padding: 2rem; /* Увеличенные отступы */
    max-width: 1000px; /* Ограничение максимальной ширины для читаемости */
    margin: 2rem auto; /* Центрирование и отступы сверху/снизу */
    background-color: #ffffff; /* Белый фон */
    border-radius: 12px; /* Скругленные углы */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08); /* Мягкая тень */
    font-family: 'Inter', sans-serif; /* Современный шрифт */
    color: #333; /* Основной цвет текста */
  }
  
  /* --- Page Title --- */
  .pageTitle {
    font-size: 2rem; /* Крупный заголовок */
    font-weight: 600; /* Полужирный */
    color: #1a202c; /* Темный цвет заголовка */
    margin-bottom: 2rem; /* Отступ снизу */
    border-bottom: 1px solid #e2e8f0; /* Разделитель */
    padding-bottom: 1rem; /* Отступ под разделителем */
  }
  
  /* --- Section Titles --- */
  .sectionTitle {
    font-size: 1.5rem; /* Размер подзаголовка */
    font-weight: 600;
    color: #2d3748;
    margin-top: 2.5rem; /* Отступ сверху */
    margin-bottom: 1.5rem; /* Отступ снизу */
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #e2e8f0;
  }
  
  /* --- Details Section --- */
  .detailsSection,
  .resultsSection {
    margin-bottom: 2.5rem; /* Отступ между секциями */
  }
  
  .detailsGrid {
    display: grid;
    grid-template-columns: auto 1fr; /* Метка и значение */
    gap: 1rem 1.5rem; /* Промежутки между ячейками */
    align-items: center; /* Выравнивание по центру */
    background-color: #f7fafc; /* Легкий фон для секции деталей */
    padding: 1.5rem;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
  }
  
  .detailLabel {
    font-weight: 500; /* Средняя жирность */
    color: #4a5568; /* Серый цвет для меток */
    text-align: right; /* Выравнивание по правому краю */
  }
  
  .detailValue {
    color: #1a202c; /* Темный цвет для значений */
    word-break: break-word; /* Перенос длинных слов */
  }
  
  /* Стили для заметок */
  .notesValue {
      white-space: pre-wrap; /* Сохранение пробелов и переносов */
      background-color: #fff;
      padding: 0.75rem;
      border-radius: 6px;
      border: 1px dashed #cbd5e0;
      max-height: 150px; /* Ограничение высоты с прокруткой */
      overflow-y: auto; /* Добавление прокрутки */
  }
  
  /* --- Ссылка для скачивания/действий --- */
  .actionLink {
    color: #3182ce; /* Синий цвет ссылки */
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease-in-out;
  }
  
  .actionLink:hover {
    color: #2b6cb0; /* Темно-синий при наведении */
    text-decoration: underline;
  }
  
  /* --- Статус обработки (ошибка) --- */
  .processingErrorDetails {
    color: #c53030; /* Красный цвет для ошибок */
    font-size: 0.875rem; /* Меньший шрифт */
    margin-left: 0.5rem; /* Небольшой отступ слева */
  }
  
  /* --- Results Table --- */
  .resultsTableWrapper {
    overflow-x: auto; /* Горизонтальная прокрутка для маленьких экранов */
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    background-color: #ffffff;
  }
  
  .resultsTable {
    width: 100%;
    border-collapse: collapse; /* Убираем двойные границы */
    text-align: left; /* Выравнивание текста по левому краю */
  }
  
  .resultsTable th,
  .resultsTable td {
    padding: 0.9rem 1rem; /* Увеличенные отступы в ячейках */
    border-bottom: 1px solid #e2e8f0; /* Горизонтальные разделители */
    vertical-align: middle; /* Выравнивание по вертикали */
  }
  
  .resultsTable th {
    background-color: #f7fafc; /* Легкий фон для заголовков */
    font-weight: 600;
    color: #4a5568;
    font-size: 0.875rem; /* Чуть меньше шрифт */
    text-transform: uppercase; /* Заглавные буквы */
    letter-spacing: 0.05em; /* Небольшой разряд */
  }
  
  .resultsTable tbody tr:last-child td {
    border-bottom: none; /* Убираем границу у последней строки */
  }
  
  .resultsTable tbody tr:hover {
    background-color: #f7fafc; /* Подсветка строки при наведении */
  }
  
  /* Стиль для аномальных результатов */
  .abnormalRow {
    background-color: #fed7d7 !important; /* Красный фон для аномальных (важно, чтобы переопределить hover) */
    font-weight: 500; /* Немного жирнее */
  }
  
  .abnormalRow td {
      color: #9b2c2c; /* Темно-красный текст */
  }
  
  /* --- Сообщения (нет результатов, информация) --- */
  .infoMessage {
    background-color: #ebf8ff; /* Голубой фон */
    color: #3182ce; /* Синий текст */
    padding: 1rem;
    border-radius: 8px;
    border: 1px solid #bee3f8;
    margin-top: 1rem;
  }
  
  /* --- Состояния загрузки и ошибок --- */
  .loadingPageContainer,
  .errorPageContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 300px; /* Минимальная высота */
    text-align: center;
    padding: 2rem;
  }
  
  .loadingSpinner {
    border: 4px solid #f3f3f3; /* Light grey */
    border-top: 4px solid #3498db; /* Blue */
    border-radius: 50%;
    width: 40px;
    height: 40px;
    animation: spin 1s linear infinite;
    margin-bottom: 1rem;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .errorMessage {
    color: #c53030; /* Красный цвет ошибки */
    background-color: #fed7d7; /* Светло-красный фон */
    padding: 1rem 1.5rem;
    border-radius: 8px;
    border: 1px solid #fbb6ce;
    font-weight: 500;
    max-width: 600px;
  }
  
  /* --- Кнопка "Назад" --- */
  .backButton {
    display: inline-flex; /* Для выравнивания иконки и текста */
    align-items: center;
    padding: 0.6rem 1.2rem;
    margin-bottom: 1.5rem; /* Отступ снизу */
    background-color: #e2e8f0; /* Серый фон */
    color: #4a5568; /* Серый текст */
    border: none;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  }
  
  .backButton:hover {
    background-color: #cbd5e0; /* Темнее при наведении */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  /* --- Адаптивность --- */
  @media (max-width: 768px) {
    .pageContainer {
      padding: 1rem;
      margin: 1rem;
    }
  
    .pageTitle {
      font-size: 1.75rem;
    }
  
    .sectionTitle {
      font-size: 1.25rem;
    }
  
    .detailsGrid {
      grid-template-columns: 1fr; /* Одна колонка на мобильных */
      gap: 0.75rem;
      padding: 1rem;
    }
  
    .detailLabel {
      text-align: left; /* Выравнивание по левому краю на мобильных */
      margin-bottom: 0.25rem; /* Небольшой отступ снизу */
      color: #718096; /* Чуть светлее */
      font-size: 0.875rem;
    }
  
    .resultsTable th,
    .resultsTable td {
      padding: 0.75rem;
      font-size: 0.9rem; /* Чуть меньше шрифт в таблице */
    }
  }

/* --- Styles for Metric Selection Controls --- */

/* Main container for the controls section */
.metricSelectionControls {
  margin-top: 2rem;
  margin-bottom: 2rem;
  padding: 1.5rem;
  background-color: #f8f9fa; /* Light background for this section */
  border: 1px solid #dee2e6;
  border-radius: 8px;
}

/* Style for the label above the checkbox group (e.g., "Select Metrics:") */
/* NOTE: Add className={styles.groupLabel} to the <label> in your JSX */
.groupLabel {
  display: block;
  font-size: 1.1rem;
  font-weight: 600;
  color: #495057;
  margin-bottom: 1rem;
}

/* Container for the checkboxes themselves */
.checkboxGroup {
  /* Define local variables for checkbox colors */
  --checkbox-border-color: #adb5bd;
  --checkbox-border-hover-color: #868e96;
  --checkbox-border-focus-ring-color: rgba(0, 123, 255, 0.25);
  --checkbox-bg-checked-color: #007AFF;    /* Primary blue */
  --checkbox-border-checked-color: #007AFF;
  --checkbox-checkmark-color: #ffffff;
  --checkbox-label-text-color: #212529;
  --checkbox-label-hover-bg-color: #e9ecef;

  /* Layout (Example: Responsive Grid) */
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 0.75rem;
  /* --- Or use Flexbox for a single column ---
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  */
}

/* Styles for each individual checkbox label */
.metricCheckboxLabel {
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  padding: 0.6rem 0.5rem;
  border-radius: 4px;
  transition: background-color 0.2s ease-in-out;
  user-select: none;
  color: var(--checkbox-label-text-color);
  font-size: 0.95rem;
  position: relative;
}

.metricCheckboxLabel:hover {
  background-color: var(--checkbox-label-hover-bg-color);
}

/* Hide the default browser checkbox */
.metricCheckboxLabel input[type="checkbox"] {
  opacity: 0;
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/* The styled visual checkbox (requires adding a <span> in JSX) */
.customCheckbox {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid var(--checkbox-border-color);
  border-radius: 4px;
  margin-right: 0.75rem;
  transition: border-color 0.2s ease-in-out, background-color 0.2s ease-in-out;
  position: relative;
  flex-shrink: 0;
  background-color: #fff;
}

/* Text part of the label (optional, if you wrap text in span) */
.metricNameText {
  line-height: 1.2;
}

/* Hover state for the custom checkbox visual */
.metricCheckboxLabel:hover .customCheckbox {
  border-color: var(--checkbox-border-hover-color);
}

/* Focus state for the custom checkbox visual */
.metricCheckboxLabel input[type="checkbox"]:focus-visible + .customCheckbox {
  box-shadow: 0 0 0 0.2rem var(--checkbox-border-focus-ring-color);
  border-color: var(--checkbox-bg-checked-color);
}

/* Checked state for the custom checkbox visual */
.metricCheckboxLabel input[type="checkbox"]:checked + .customCheckbox {
  background-color: var(--checkbox-bg-checked-color);
  border-color: var(--checkbox-border-checked-color);
}

/* Checkmark pseudo-element */
.metricCheckboxLabel input[type="checkbox"]:checked + .customCheckbox::after {
  content: "";
  position: absolute;
  display: block;
  left: 6px;
  top: 2px;
  width: 5px;
  height: 10px;
  border: solid var(--checkbox-checkmark-color);
  border-width: 0 2.5px 2.5px 0;
  transform: rotate(45deg);
}

/* Disabled state styling */
.metricCheckboxLabel input[type="checkbox"]:disabled + .customCheckbox {
  border-color: #e0e0e0;
  background-color: #f5f5f5;
}

.metricCheckboxLabel input[type="checkbox"]:disabled + .customCheckbox::after {
  border-color: #b0b0b0; /* Greyed out checkmark */
}

/* Style the label container when checkbox inside is disabled */
.metricCheckboxLabel:has(input[type="checkbox"]:disabled) {
  cursor: not-allowed;
  background-color: transparent; /* No hover */
  opacity: 0.65;
}

/* Style the text specifically when disabled (if wrapped in span) */
.metricCheckboxLabel input[type="checkbox"]:disabled ~ .metricNameText {
  color: #b0b0b0;
}